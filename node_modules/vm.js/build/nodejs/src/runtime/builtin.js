(function() {
  var ArrayIterator, StopIteration, VmError,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  VmError = require('./errors').VmError;

  StopIteration = (function(_super) {
    __extends(StopIteration, _super);

    StopIteration.display = 'StopIteration';

    function StopIteration(value, message) {
      this.value = value;
      this.message = message != null ? message : 'iterator has stopped';
    }

    return StopIteration;

  })(VmError);

  ArrayIterator = (function() {
    function ArrayIterator(elements) {
      this.elements = elements;
      this.index = 0;
    }

    ArrayIterator.prototype.next = function() {
      if (this.index >= this.elements.length) {
        throw new StopIteration();
      }
      return this.elements[this.index++];
    };

    return ArrayIterator;

  })();

  exports.StopIteration = StopIteration;

  exports.ArrayIterator = ArrayIterator;

}).call(this);


//@ sourceMappingURL=builtin.js.map